{"ast":null,"code":"import _asyncToGenerator from \"/Users/ivangarciaparras/Git/ivan-garcia-parras/homebridge-eufy-legacy/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport { ConfigOptionsInterpreter } from '../config-options-interpreter';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../../../app/plugin.service\";\nimport * as i2 from \"@angular/forms\";\nexport let ForceRefreshsnapComponent = /*#__PURE__*/(() => {\n  class ForceRefreshsnapComponent extends ConfigOptionsInterpreter {\n    constructor(pluginService) {\n      super(pluginService);\n      this.value = false;\n    }\n\n    ngOnInit() {\n      this.readValue();\n    }\n\n    readValue() {\n      var _this = this;\n\n      return _asyncToGenerator(function* () {\n        var _a;\n\n        const config = yield _this.getCameraConfig(((_a = _this.accessory) === null || _a === void 0 ? void 0 : _a.uniqueId) || '');\n\n        if (config && Object.prototype.hasOwnProperty.call(config, 'forcerefreshsnap')) {\n          _this.value = config['forcerefreshsnap'];\n        }\n      })();\n    }\n\n    update() {\n      this.updateConfig({\n        forcerefreshsnap: this.value\n      }, this.accessory);\n    }\n\n  }\n\n  ForceRefreshsnapComponent.ɵfac = function ForceRefreshsnapComponent_Factory(t) {\n    return new (t || ForceRefreshsnapComponent)(i0.ɵɵdirectiveInject(i1.PluginService));\n  };\n\n  ForceRefreshsnapComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: ForceRefreshsnapComponent,\n    selectors: [[\"app-force-refreshsnap\"]],\n    inputs: {\n      accessory: \"accessory\"\n    },\n    features: [i0.ɵɵInheritDefinitionFeature],\n    decls: 11,\n    vars: 1,\n    consts: [[1, \"settingsItem\", \"row\", \"p-3\"], [1, \"d-flex\", \"justify-content-between\", \"align-items-center\", \"mb-2\"], [1, \"form-check\", \"form-switch\"], [\"type\", \"checkbox\", \"role\", \"switch\", \"id\", \"flexSwitchCheckDefault\", 1, \"form-check-input\", 3, \"ngModel\", \"ngModelChange\", \"change\"]],\n    template: function ForceRefreshsnapComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 0)(1, \"div\", 1)(2, \"span\");\n        i0.ɵɵtext(3, \"Force Refresh Snapshot (Deprecated)\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(4, \"div\", 2)(5, \"input\", 3);\n        i0.ɵɵlistener(\"ngModelChange\", function ForceRefreshsnapComponent_Template_input_ngModelChange_5_listener($event) {\n          return ctx.value = $event;\n        })(\"change\", function ForceRefreshsnapComponent_Template_input_change_5_listener() {\n          return ctx.update();\n        });\n        i0.ɵɵelementEnd()()();\n        i0.ɵɵelementStart(6, \"small\")(7, \"i\");\n        i0.ɵɵtext(8, \" When enabled, we will start stream for one frame and use as a snapshot (this can affect the battery life). If it's disabled, we will use the Eufy Cloud API one (which could be really old).\");\n        i0.ɵɵelement(9, \"br\");\n        i0.ɵɵtext(10, \" This option is only used if you have disabled enhanced snapshot handling. \");\n        i0.ɵɵelementEnd()()();\n      }\n\n      if (rf & 2) {\n        i0.ɵɵadvance(5);\n        i0.ɵɵproperty(\"ngModel\", ctx.value);\n      }\n    },\n    directives: [i2.CheckboxControlValueAccessor, i2.NgControlStatus, i2.NgModel],\n    encapsulation: 2\n  });\n  return ForceRefreshsnapComponent;\n})();","map":null,"metadata":{},"sourceType":"module"}